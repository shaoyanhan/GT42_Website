import { fetchRawData } from "./data.js";
import { drawTranscriptCount, drawSNPTypeCount, drawAverageTPMCount, drawEdgeWeightCount } from "./echartsEventsHomeStatistics.js";

let SNPTypeCount = [
    { name: 'C/T', value: 406541 },
    { name: 'A/G', value: 386814 },
    { name: 'C/G', value: 135900 },
    { name: 'G/T', value: 120228 },
    { name: 'A/C', value: 108567 },
    { name: 'A/T', value: 101392 },
    { name: 'A/G/T', value: 8918 },
    { name: 'A/C/T', value: 8326 },
    { name: 'C/G/T', value: 8008 },
    { name: 'A/C/G', value: 7750 },
    { name: 'A/C/G/T', value: 791 },
];

let averageTPMTable = [
    ['Ca1_1', 'Ca1_2', 'Ca1_3', 'Ca2_1', 'Ca2_2', 'Ca2_3', 'Ca3_1', 'Ca3_2', 'Ca3_3', 'Ro1_1', 'Ro1_2', 'Ro1_3', 'Ro2_1', 'Ro2_2', 'Ro2_3', 'Le1_1', 'Le1_2', 'Le1_3', 'LS1_1', 'LS1_2', 'LS1_3', 'Bu1_1', 'Bu1_2', 'Bu1_3', 'In1_1', 'In1_2', 'In1_3', 'NR1_1', 'NR1_2', 'NR1_3', 'AM_1', 'AM_2', 'AM_3', 'Bu2_1', 'Bu2_2', 'Bu2_3', 'Sp_1', 'Sp_2', 'Sp_3', 'Br_1', 'Br_2', 'Br_3', 'St_1', 'St_2', 'St_3', 'Pi_1', 'Pi_2', 'Pi_3', 'Gl_2', 'Gl_3', 'LS2_2', 'LS2_3', 'In2_1', 'In2_3', 'No2_1', 'No2_2', 'No2_3', 'Bu3_1', 'Bu3_3', 'Le2_1', 'Le2_2', 'Le2_3'],
    [3.1944, 3.2140, 2.9654, 3.0215, 3.0728, 3.0523, 3.1763, 3.1989, 3.2031, 2.8993,
        3.0071, 2.8903, 2.8772, 2.7389, 2.8358, 3.1172, 3.0628, 3.1411, 2.8404, 2.9153,
        2.9136, 3.2547, 3.2358, 3.2299, 3.0052, 2.8855, 2.9279, 3.0031, 2.9804, 2.9953,
        3.1668, 3.1066, 3.1618, 3.0688, 3.1250, 3.2666, 2.9744, 2.8034, 2.9629, 2.9724,
        2.8378, 2.9145, 2.4175, 2.3775, 2.2089, 2.5333, 2.6153, 2.7908, 2.9032, 2.9301,
        2.7403, 2.7807, 2.8260, 3.0144, 2.9856, 2.8450, 2.9577, 3.1018, 3.0936, 2.6859,
        2.7410, 2.6666],
    [2.7705, 2.7851, 2.5445, 2.6021, 2.6668, 2.6212, 2.7473, 2.7738, 2.7650, 2.5217, 2.6243, 2.5169,
        2.4941, 2.3567, 2.4471, 2.7207, 2.6664, 2.7418, 2.4469, 2.5103, 2.5188, 2.8092, 2.7952, 2.7873,
        2.6107, 2.5063, 2.5439, 2.6219, 2.6021, 2.6111, 2.7613, 2.7014, 2.7489, 2.5096, 2.5497, 2.6697,
        2.5882, 2.4239, 2.5762, 2.5705, 2.4579, 2.5154, 2.0673, 2.0302, 1.8630, 2.1512, 2.2381, 2.4065,
        2.5176, 2.5423, 2.3549, 2.4001, 2.4590, 2.6359, 2.5743, 2.4533, 2.5652, 2.6664, 2.6806, 2.2821,
        2.3454, 2.2813],
    [2.0502, 2.0603, 1.8172, 1.8763, 1.9632, 1.9234, 2.0158, 2.027, 2.024, 1.841, 1.9481, 1.8638, 1.84, 1.7094, 1.7854, 2.0359, 1.9837, 2.0545, 1.7838, 1.8417, 1.8623, 2.0823, 2.0748, 2.0652, 1.956, 1.8789, 1.9046, 1.9514, 1.939, 1.939, 2.0727, 2.0192, 2.0539, 1.7516, 1.7765, 1.8574, 1.9007, 1.7391, 1.8815, 1.8726, 1.7973, 1.8252, 1.4597, 1.4357, 1.2656, 1.4902, 1.6031, 1.7462, 1.8314, 1.8605, 1.7098, 1.7387, 1.8551, 1.9961, 1.8906, 1.8078, 1.9062, 1.9418, 1.9835, 1.5989, 1.6891, 1.6221],
    [1.0477, 1.0712, 0.9029, 0.9417, 1.0029, 1.0157, 1.0396, 1.0453, 1.047, 0.9232,
        1.0074, 0.9552, 0.9653, 0.8936, 0.9361, 1.0437, 1.0182, 1.0578, 0.9075, 0.9524,
        0.9665, 1.0902, 1.0836, 1.0773, 1.0031, 0.958, 0.9717, 0.9864, 0.9812, 0.981,
        1.0649, 1.0381, 1.065, 0.9088, 0.922, 0.9686, 0.971, 0.8682, 0.9531, 0.9783,
        0.947, 0.9619, 0.7198, 0.7245, 0.6008, 0.7443, 0.8531, 0.929, 0.9424, 0.9654,
        0.9036, 0.8967, 0.9764, 1.0348, 0.9931, 0.9642, 0.9966, 1.01, 1.0366, 0.8159,
        0.9056, 0.8262]
]

// -- mosaic 134706 33896 8569 2460
// --xenologous 209406 51424 12823 3743
// --gene 511538 115632 27167 7328
let edgeWeightTable = [
    ['mosaic', 'xenologous', 'gene'],
    [134706, 33896, 8569, 2460],
    [209406, 51424, 12823, 3743],
    [511538, 115632, 27167, 7328]
]


async function initialContentArea() {
    // console.log("initialContentAreaHomeStatistics.js");

    // 请求转录本计数的数据，这里不对其进行存储的实现，因为没有缓存优化的必要
    let response = await fetchRawData('homePageStatisticData', 'transcriptCount');
    let transcriptCount = response.data;

    drawTranscriptCount(transcriptCount);
    // 由于SQL查询缓慢，SNP的统计数据已经在本文件中定义，因此不需要再次请求
    drawSNPTypeCount(SNPTypeCount);
    drawAverageTPMCount(averageTPMTable);
    drawEdgeWeightCount(edgeWeightTable);
}

export { initialContentArea };